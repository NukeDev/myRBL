# =============================================================================
# myRBL Dockerized
# 
# Copyright (C) 2024 [NukeDev - Gianmarco Varriale]
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
# =============================================================================

services:
  db:
    image: mysql:latest
    container_name: db_server
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  bind:
    build: 
      context: ./rbl
    container_name: dns_server
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      RBL_DOMAIN: ${RBL_DOMAIN}
      NS_PUBLIC_IP_ADDRESS: ${NS_PUBLIC_IP_ADDRESS}
      STAMPARM_URL_EXT_IP_ADDRESSES_BLACKLIST: ${STAMPARM_URL_EXT_IP_ADDRESSES_BLACKLIST}
      URL_EXT_DOMAINS_BLACKLIST: ${URL_EXT_DOMAINS_BLACKLIST}
      BIND_REFRESH_BLACKLIST_CRONJOB: ${BIND_REFRESH_BLACKLIST_CRONJOB}
      EXT_BLACKLIST_CRONJOB: ${EXT_BLACKLIST_CRONJOB}
    volumes:
      - bind_cache:/var/cache/bind
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    depends_on:
      - db
    restart: always

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db

  php:
    build:
      context: ./web
      dockerfile: Dockerfile-php
    container_name: php_server
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      RBL_DOMAIN: ${RBL_DOMAIN}
      NS_PUBLIC_IP_ADDRESS: ${NS_PUBLIC_IP_ADDRESS}
    depends_on:
      - bind
    volumes:
      - ./web/www:/var/www/html

  caddy:
    build:
      context: ./web
      dockerfile: Dockerfile-caddy
    container_name: caddy_server
    ports:
      - "80:80"
      - "443:443"
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      RBL_DOMAIN: ${RBL_DOMAIN}
      NS_PUBLIC_IP_ADDRESS: ${NS_PUBLIC_IP_ADDRESS}
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      USE_SSL: ${USE_SSL}
    depends_on:
      - bind
    volumes:
      - ./web/www:/var/www/html
      - ./web/logs:/var/log/caddy
      - caddy_data:/data
      - caddy_config:/config
      - caddy_certs:/etc/ssl/caddy
    entrypoint: ["/bin/sh", "-c", "envsubst < /etc/caddy/Caddyfile.template > /etc/caddy/Caddyfile && caddy run --config /etc/caddy/Caddyfile"]


volumes:
  db_data:
  bind_cache:
  caddy_data:
  caddy_config:
  caddy_certs: